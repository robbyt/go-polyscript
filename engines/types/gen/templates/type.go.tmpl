//go:generate go run ./gen/typeGen.go
// Code generated by go generate; DO NOT EDIT.

package types

import (
	"errors"
    "fmt"
    "path/filepath"
    "strings"
)

var ErrInvalidMachineType = errors.New("invalid machine type")

type Type string

func (t Type) String() string {
    return string(t)
}

const (
    Unsupported Type = "unsupported"
    {{- range .Types}}
    // {{.Description}}
    {{.Name}} Type = "{{.Value}}"

    {{- end}}
)

func GetMachineTypeFromString(machineType string) (Type, error) {
    machineType = strings.ToLower(strings.TrimSpace(machineType))
    machineType = strings.TrimPrefix(machineType, ".")

    switch machineType {
    {{- range .Types}}
    case "{{.Value}}":
        return {{.Name}}, nil
    {{- end}}
    default:
        return "", fmt.Errorf("%w: %s", ErrInvalidMachineType, machineType)
    }
}

func GetMachineTypeFromPath(path string) (Type, error) {
    ext := strings.TrimSpace(strings.ToLower(strings.TrimSpace(filepath.Ext(path))))
    return GetMachineTypeFromString(ext)
}